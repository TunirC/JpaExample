spring:
  application:
    name: store-content-manager
  security:
    user:
      name: user
      password: password
    oauth2:
      client:
        registration:
          github:
            client-id: ${CLIENT_ID:Ov23lituOVBChp3hPwZH}
            client-secret: ${CLIENT_SECRET:08d99e5d8c4c27cd1500cbf36308603cc6fe753a}
  data:
    mongodb:
      host: ${MONGO_HOST:localhost}
      port: ${MONGO_PORT:27017}
      database: ${MONGO_DATABASE_NAME:store-content-manager-service}
  datasource:
    url: jdbc:mysql://localhost:3306/store-setup
    username: ${MYSQL_USER_NAME:root}
    password: ${MYSQL_USER_PASSWORD:1234}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ${GROUP_ID:store-content-group}
      topic-name: ${CONSUME_TOPIC:test-messages}
    producer:
      topic-name: ${PRODUCE_TOPIC:test-messages}

db:
  source:
    type: ${DB_SOURCE_TYPE:mongo}

fake-store:
  uri: ${STORE_URL:https://fakestoreapi.com}

logging:
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'

server:
  port: 8090
  servlet:
    context-path: /store/management

#mongo
#uri:
#user: tunirch12
#pass: CArLy50npM35vVAC